{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/alert-page/alert-page-routing.module.ts","webpack:///src/app/alert-page/alert-page.component.ts","webpack:///src/app/alert-page/alert-page.component.html","webpack:///src/app/alert-page/alert-page.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/record/record-routing.module.ts","webpack:///src/app/record/record.component.ts","webpack:///src/app/record/record.component.html","webpack:///src/app/record/record.module.ts","webpack:///src/app/record/record.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AlertPageRoutingModule","forChild","imports","AlertPageComponent","time","Date","getTime","alert","location","reload","alertMessage","selector","templateUrl","styleUrls","AlertPageModule","declarations","redirectTo","pathMatch","AppRoutingModule","forRoot","AppComponent","title","AppModule","providers","bootstrap","LoginRoutingModule","LoginComponent","router","model","account","password","navigate","onSubmit","LoginModule","RecordRoutingModule","RecordComponent","recordService","punchInList","selectedValue","setPunchInList","getPunchInList","subscribe","values","date","Number","periodsOfTheDay","localStorage","setItem","JSON","stringify","onClick","RecordModule","RecordService","httpClient","get","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AlertPageComponent } from './alert-page.component';\n\n\nconst routes: Routes = [\n  { path: 'alertPage', component: AlertPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AlertPageRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alert-page',\n  templateUrl: './alert-page.component.html',\n  styleUrls: ['./alert-page.component.scss']\n})\nexport class AlertPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public alertMessage(): void {\n    const time = new Date().getTime();\n\n    if (time % 2 === 0) {\n      alert('message');\n    } else {\n      location.reload();\n    }\n\n  }\n}\n","<button pButton label=\"跳訊息或重整\" (click)=\"alertMessage()\"></button>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonModule } from 'primeng/button';\n\nimport { AlertPageRoutingModule } from './alert-page-routing.module';\nimport { AlertPageComponent } from './alert-page.component';\n\n\n@NgModule({\n  declarations: [AlertPageComponent],\n  imports: [\n    CommonModule,\n    ButtonModule,\n    AlertPageRoutingModule,\n  ]\n})\nexport class AlertPageModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-for-puppeteer';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginModule } from './login/login.module';\nimport { RecordModule } from './record/record.module';\nimport { AppComponent } from './app.component';\nimport { AlertPageModule } from './alert-page/alert-page.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    LoginModule,\n    RecordModule,\n    AlertPageModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public model = {\n    account: '',\n    password: '',\n  };\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public onSubmit(): void {\n    if (this.model.account === '123' && this.model.password === '321') {\n      this.router.navigate(['/record']);\n    } else {\n      alert('帳號或密碼錯誤！');\n    }\n  }\n}\n","<div class=\"p-grid p-justify-center\">\n  <div class=\"p-col\">\n    <form (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui-inputgroup\">\n        <span class=\"ui-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n        <input\n          [(ngModel)]=\"model.account\"\n          pInputText\n          name=\"account\"\n          placeholder=\"account\"\n        >\n      </div>\n\n      <div class=\"ui-inputgroup\">\n        <span class=\"ui-inputgroup-addon\"><i class=\"pi pi-tags\"></i></span>\n        <input\n          type=\"password\"\n          [(ngModel)]=\"model.password\"\n          pInputText\n          name=\"password\"\n          placeholder=\"password\"\n        >\n      </div>\n\n      <button pButton type=\"submit\" label=\"送出\"></button>\n    </form>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    InputTextModule,\n    ButtonModule,\n    LoginRoutingModule\n  ],\n  exports: [\n    LoginComponent,\n  ],\n})\nexport class LoginModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RecordComponent } from './record.component';\n\n\nconst routes: Routes = [\n  { path: 'record', component: RecordComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RecordRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { format, differenceInDays } from 'date-fns';\n\nimport { PunchIn, PeriodsOfTheDayType } from './record.model';\nimport { RecordService } from './record.service';\n\n@Component({\n  selector: 'app-record',\n  templateUrl: './record.component.html',\n  styleUrls: ['./record.component.scss']\n})\nexport class RecordComponent implements OnInit {\n\n  public selectedValue: PeriodsOfTheDayType;\n  public punchInList: PunchIn[] = [];\n  constructor(\n    private recordService: RecordService,\n  ) { }\n\n  ngOnInit(): void {\n    this.selectedValue = 'morning';\n    // const punchInListJSON = localStorage.getItem('punchInList');\n    // if (punchInListJSON) {\n    //   const punchInList: PunchIn[] = JSON.parse(punchInListJSON);\n\n    //   const filteredPunchInList = punchInList.filter((punchIn) => {\n    //     const year = Number(punchIn.date.slice(0, 3)) + 1911;\n    //     const month = punchIn.date.slice(3, 5);\n    //     const date = punchIn.date.slice(5, 7);\n    //     const hour = punchIn.time.slice(0, 2);\n    //     const minute = punchIn.time.slice(2, 4);\n    //     const dateTime = `${year}-${month}-${date} ${hour}:${minute}`;\n    //     return differenceInDays(new Date(), new Date(dateTime)) < 2;\n    //   });\n\n    //   this.punchInList = filteredPunchInList;\n    // } else {\n    //   this.punchInList = [];\n    // }\n\n    this.setPunchInList();\n  }\n\n  private setPunchInList(): void {\n    this.recordService.getPunchInList()\n      .subscribe(\n        (values) => {\n          this.punchInList = values;\n        },\n      );\n  }\n\n  public onClick(): void {\n    if (!this.selectedValue) {\n      alert('請選擇早上或是下午');\n      return;\n    }\n\n    const date = new Date();\n\n    this.punchInList = [\n      ...this.punchInList,\n      {\n        date: `${Number(format(date, 'yyyy')) - 1911}${format(date, 'MMdd')}`,\n        time: format(date, 'hhmm'),\n        periodsOfTheDay: this.selectedValue,\n      },\n    ];\n\n    localStorage.setItem('punchInList', JSON.stringify(this.punchInList));\n  }\n}\n","<div>\n  <p-radioButton\n    name=\"periodsOfTheDay\"\n    value=\"morning\"\n    [(ngModel)]=\"selectedValue\"\n    label=\"早上\"\n  >\n  </p-radioButton>\n</div>\n<div>\n  <p-radioButton\n    name=\"periodsOfTheDay\"\n    value=\"afternoon\"\n    [(ngModel)]=\"selectedValue\"\n    label=\"下午\"\n  >\n  </p-radioButton>\n</div>\n\n<button pButton type=\"button\" label=\"送出\" (click)=\"onClick()\"></button>\n\n<br />\n\n<div *ngIf=\"punchInList.length > 0\">\n  <p-table [value]=\"punchInList\">\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th>日期</th>\n        <th>時間</th>\n        <th>上下午</th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-punchIn>\n      <tr>\n        <td>{{punchIn.date}}</td>\n        <td>{{punchIn.time}}</td>\n        <td>{{punchIn.periodsOfTheDay}}</td>\n      </tr>\n    </ng-template>\n  </p-table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ButtonModule } from 'primeng/button';\nimport { TableModule } from 'primeng/table';\n\nimport { RecordRoutingModule } from './record-routing.module';\nimport { RecordComponent } from './record.component';\n\n\n@NgModule({\n  declarations: [RecordComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RadioButtonModule,\n    ButtonModule,\n    TableModule,\n    RecordRoutingModule,\n  ],\n})\nexport class RecordModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PunchIn } from './record.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecordService {\n\n  constructor(\n    private httpClient: HttpClient,\n  ) { }\n\n  getPunchInList(): Observable<PunchIn[]> {\n    return this.httpClient.get<PunchIn[]>('http://localhost:3000');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}